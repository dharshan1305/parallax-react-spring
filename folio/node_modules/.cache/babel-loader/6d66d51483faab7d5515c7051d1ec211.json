{"ast":null,"code":"var _jsxFileName = \"/home/spectraisdead/Documents/web/folio/src/Tree.js\";\nimport React from 'react'; //import { Group } from '@vx/group'\n//import { Tree } from '@vx/hierarchy'\n//import { LinearGradient } from '@vx/gradient'\n\nimport { hierarchy } from 'd3-hierarchy';\nimport Links from './LinksMove';\nimport Nodes from './NodesSpring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      layout: 'cartesian',\n      orientation: 'horizontal',\n      linkType: 'diagonal',\n      stepPercent: 0.5\n    };\n  }\n\n  render() {\n    const {\n      data,\n      width,\n      height,\n      margin = {\n        top: 30,\n        left: 30,\n        right: 30,\n        bottom: 30\n      }\n    } = this.props;\n    const {\n      layout,\n      orientation,\n      linkType,\n      stepPercent\n    } = this.state;\n    if (width < 10) return null;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n    const origin = {\n      x: 0,\n      y: 0\n    };\n    const sizeWidth = innerHeight;\n    const sizeHeight = innerWidth;\n    const root = hierarchy(data, d => d.isExpanded ? d.children : null);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: [/*#__PURE__*/_jsxDEV(LinearGradient, {\n          id: \"lg\",\n          from: \"#fd9b93\",\n          to: \"#fe6e9e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tree, {\n          top: margin.top,\n          left: margin.left,\n          root: root,\n          size: [sizeWidth, sizeHeight],\n          separation: (a, b) => (a.parent == b.parent ? 1 : 0.5) / a.depth,\n          children: ({\n            data\n          }) => console.log(data) || /*#__PURE__*/_jsxDEV(Group, {\n            top: origin.y,\n            left: origin.x,\n            children: [/*#__PURE__*/_jsxDEV(Links, {\n              links: data.links(),\n              linkType: linkType,\n              layout: layout,\n              orientation: orientation,\n              stepPercent: stepPercent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Nodes, {\n              nodes: data.descendants(),\n              layout: layout,\n              orientation: orientation,\n              onNodeClick: node => {\n                if (!node.data.isExpanded) {\n                  node.data.x0 = node.x;\n                  node.data.y0 = node.y;\n                }\n\n                node.data.isExpanded = !node.data.isExpanded;\n                this.forceUpdate();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/spectraisdead/Documents/web/folio/src/Tree.js"],"names":["React","hierarchy","Links","Nodes","Component","state","layout","orientation","linkType","stepPercent","render","data","width","height","margin","top","left","right","bottom","props","innerWidth","innerHeight","origin","x","y","sizeWidth","sizeHeight","root","d","isExpanded","children","a","b","parent","depth","console","log","links","descendants","node","x0","y0","forceUpdate"],"mappings":"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","sourcesContent":["import React from 'react'\n//import { Group } from '@vx/group'\n//import { Tree } from '@vx/hierarchy'\n//import { LinearGradient } from '@vx/gradient'\nimport { hierarchy } from 'd3-hierarchy'\nimport Links from './LinksMove'\nimport Nodes from './NodesSpring'\n\nexport default class extends React.Component {\n  state = {\n    layout: 'cartesian',\n    orientation: 'horizontal',\n    linkType: 'diagonal',\n    stepPercent: 0.5,\n  }\n\n  render() {\n    const {\n      data,\n      width,\n      height,\n      margin = {\n        top: 30,\n        left: 30,\n        right: 30,\n        bottom: 30,\n      },\n    } = this.props\n    const { layout, orientation, linkType, stepPercent } = this.state\n\n    if (width < 10) return null\n\n    const innerWidth = width - margin.left - margin.right\n    const innerHeight = height - margin.top - margin.bottom\n    const origin = { x: 0, y: 0 }\n    const sizeWidth = innerHeight\n    const sizeHeight = innerWidth\n    const root = hierarchy(data, d => (d.isExpanded ? d.children : null))\n\n    return (\n      <div>\n        <svg width={width} height={height}>\n          <LinearGradient id=\"lg\" from=\"#fd9b93\" to=\"#fe6e9e\" />\n          <Tree\n            top={margin.top}\n            left={margin.left}\n            root={root}\n            size={[sizeWidth, sizeHeight]}\n            separation={(a, b) => (a.parent == b.parent ? 1 : 0.5) / a.depth}>\n            {({ data }) =>\n              console.log(data) || (\n                <Group top={origin.y} left={origin.x}>\n                  <Links\n                    links={data.links()}\n                    linkType={linkType}\n                    layout={layout}\n                    orientation={orientation}\n                    stepPercent={stepPercent}\n                  />\n                  <Nodes\n                    nodes={data.descendants()}\n                    layout={layout}\n                    orientation={orientation}\n                    onNodeClick={node => {\n                      if (!node.data.isExpanded) {\n                        node.data.x0 = node.x\n                        node.data.y0 = node.y\n                      }\n                      node.data.isExpanded = !node.data.isExpanded\n                      this.forceUpdate()\n                    }}\n                  />\n                </Group>\n              )\n            }\n          </Tree>\n        </svg>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}