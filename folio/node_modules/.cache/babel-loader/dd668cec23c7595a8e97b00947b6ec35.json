{"ast":null,"code":"var _jsxFileName = \"/home/spectraisdead/Documents/web/folio/src/index.js\";\nimport React, { useState, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\nimport { useSprings, animated, interpolate } from 'react-spring';\nimport { useGesture } from 'react-use-gesture';\nimport { ParentSize } from '@vx/responsive';\nimport Tree from './Tree';\nimport data from './data';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = ['https://upload.wikimedia.org/wikipedia/en/f/f5/RWS_Tarot_08_Strength.jpg', 'https://upload.wikimedia.org/wikipedia/en/5/53/RWS_Tarot_16_Tower.jpg', 'https://upload.wikimedia.org/wikipedia/en/9/9b/RWS_Tarot_07_Chariot.jpg', 'https://upload.wikimedia.org/wikipedia/en/d/db/RWS_Tarot_06_Lovers.jpg', 'https://upload.wikimedia.org/wikipedia/en/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg', 'https://upload.wikimedia.org/wikipedia/en/d/de/RWS_Tarot_01_Magician.jpg'];\n\nconst to = i => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100\n});\n\nconst from = i => ({\n  x: 0,\n  rot: 0,\n  scale: 1.5,\n  y: -1000\n}); // This is being used down there in the view, it interpolates rotation and scale into a css transform\n\n\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nconst TreeExample = () => /*#__PURE__*/_jsxDEV(ParentSize, {\n  children: size => size.ref && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n      background: '#272b4d'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"hey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      data: data,\n      width: size.width * 0.9,\n      height: size.height * 0.9\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\n_c = TreeExample;\nexport default TreeExample; // Little helpers ...\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\n\nconst trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`;\n\nconst trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`;\n\nconst trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`;\n\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5}px,0)`;\n\nclass App extends Component {\n  render() {\n    const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\n\n    const [props, set] = useSprings(cards.length, i => ({ ...to(i),\n      from: from(i)\n    })); // Create a bunch of springs using the helpers above\n    // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n\n    const bind = useGesture(({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity\n    }) => {\n      const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\n\n      const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\n\n      if (!down && trigger) gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n\n      set(i => {\n        if (index !== i) return; // We're only interested in changing spring-data for the current spring\n\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\n\n        const scale = down ? 1.1 : 1; // Active cards lift up a bit\n\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: {\n            friction: 50,\n            tension: down ? 800 : isGone ? 200 : 500\n          }\n        };\n      });\n      if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set(i => to(i)), 600);\n    }); // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n\n    return props.map(({\n      x,\n      y,\n      rot,\n      scale\n    }, i) => /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`)\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, { ...bind(i),\n        style: {\n          transform: interpolate([rot, scale], trans),\n          backgroundImage: `url(${cards[i]})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Parallax, {\n      pages: 3,\n      vertical: true,\n      ref: ref => this.parallax = ref,\n      children: [/*#__PURE__*/_jsxDEV(ParallaxLayer, {\n        offset: 0,\n        speed: 0.5,\n        factor: 4,\n        style: {\n          backgroundImage: `url(\"https://images.wallpaperscraft.com/image/stars_starry_sky_night_117616_1280x1024.jpg\") `,\n          backgroundSize: 'contain',\n          backgroundPosition: 'center',\n          backgroundRepeat: 'True'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.parallax.scrollTo(1),\n          style: {\n            color: '#ffffff'\n          },\n          children: \"Layers can contain anything\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ParallaxLayer, {\n        offset: 0,\n        speed: 0.2,\n        style: {\n          backgroundImage: `url(\"https://images.wallpaperscraft.com/image/astronaut_spacesuit_reflection_144426_1280x1024.jpg\")`,\n          opacity: 0.7,\n          backgroundPosition: 'center center',\n          backgroundSize: 'cover'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ParallaxLayer, {\n        offset: 2,\n        speed: 0.2,\n        style: {\n          backgroundImage: `url(\"https://images.wallpaperscraft.com/image/man_hoody_hood_graphics_57295_1280x1024.jpg\")`,\n          opacity: 0.7,\n          backgroundPosition: 'center center',\n          backgroundSize: 'cover'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ParallaxLayer, {\n        offset: 1,\n        speed: 0.2,\n        style: {\n          backgroundImage: `url(\"https://images.wallpaperscraft.com/image/girl_photographer_art_118146_1920x1080.jpg\")`,\n          opacity: 0.5,\n          backgroundPosition: 'center center',\n          backgroundSize: 'cover'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 140,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeExample\");","map":{"version":3,"sources":["/home/spectraisdead/Documents/web/folio/src/index.js"],"names":["React","useState","Component","ReactDOM","Parallax","ParallaxLayer","useSprings","animated","interpolate","useGesture","ParentSize","Tree","data","cards","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","render","document","getElementById","TreeExample","size","ref","display","justifyContent","alignItems","height","background","width","calc","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","App","gone","Set","props","set","length","bind","args","index","down","delta","xDelta","distance","direction","xDir","velocity","trigger","dir","add","isGone","has","undefined","config","friction","tension","setTimeout","clear","map","transform","backgroundImage","parallax","backgroundSize","backgroundPosition","backgroundRepeat","scrollTo","color","opacity"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport {Parallax, ParallaxLayer} from 'react-spring/renderprops-addons'\nimport {useSprings, animated, interpolate} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport { ParentSize } from '@vx/responsive'\nimport Tree from './Tree'\nimport data from './data'\nimport './styles.css'\n\nconst cards = [\n  'https://upload.wikimedia.org/wikipedia/en/f/f5/RWS_Tarot_08_Strength.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/5/53/RWS_Tarot_16_Tower.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/9/9b/RWS_Tarot_07_Chariot.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/d/db/RWS_Tarot_06_Lovers.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/d/de/RWS_Tarot_01_Magician.jpg'\n]\n\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\n\n\nReactDOM.render(<Deck />, document.getElementById('root'))\n\n\nconst TreeExample = () => (\n  <ParentSize>\n    {size =>\n      size.ref && (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%',\n            background: '#272b4d',\n          }}>\n            <h2>hey</h2>\n          <Tree\n            data={data}\n            width={size.width * 0.9}\n            height={size.height * 0.9}\n          />\n        </div>\n      )\n    }\n  </ParentSize>\n)\n\nexport default TreeExample\n// Little helpers ...\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`\nconst trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`\nconst trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\nclass App extends Component {\n  render() {\n    const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n  const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\n    const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\n    if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n    set(i => {\n      if (index !== i) return // We're only interested in changing spring-data for the current spring\n      const isGone = gone.has(index)\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n    })\n    if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set(i => to(i)), 600)\n  })\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  return props.map(({ x, y, rot, scale }, i) => (\n    <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n      {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n      <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\n    </animated.div>\n  ))\n    return (\n      \n    <Parallax pages={3} vertical ref={ref => (this.parallax = ref)}>\n      \n      <ParallaxLayer \n      offset={0} \n      speed={0.5} \n      factor={4} \n      style={{  \n        backgroundImage: `url(\"https://images.wallpaperscraft.com/image/stars_starry_sky_night_117616_1280x1024.jpg\") ` ,\n         backgroundSize: 'contain',\n         backgroundPosition:'center',\n         backgroundRepeat: 'True'\n         }}>\n           \n        <span onClick={() => this.parallax.scrollTo(1)}style={{color: '#ffffff'}}>Layers can contain anything</span>\n      </ParallaxLayer>\n\n      <ParallaxLayer \n      offset={0} \n      speed={0.2}  \n      style={{ backgroundImage: `url(\"https://images.wallpaperscraft.com/image/astronaut_spacesuit_reflection_144426_1280x1024.jpg\")`,\n      opacity:0.7,\n      backgroundPosition: 'center center',\n      backgroundSize:'cover' }}>\n        <h2>Hi</h2>\n      </ParallaxLayer>\n\n      <ParallaxLayer \n      offset={2} \n      speed={0.2}  \n      style={{ backgroundImage: `url(\"https://images.wallpaperscraft.com/image/man_hoody_hood_graphics_57295_1280x1024.jpg\")`,\n      opacity:0.7,\n      backgroundPosition: 'center center',\n      backgroundSize:'cover' }}>\n        <h2>Hi</h2>\n      </ParallaxLayer>\n\n      <ParallaxLayer \n      offset={1} \n      speed={0.2}  \n      style={{ backgroundImage: `url(\"https://images.wallpaperscraft.com/image/girl_photographer_art_118146_1920x1080.jpg\")`,\n      opacity:0.5,\n      backgroundPosition: 'center center',\n      backgroundSize:'cover' }}>\n        <h2>Hi</h2>\n      </ParallaxLayer>\n      \n</Parallax>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}